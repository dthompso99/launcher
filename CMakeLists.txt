CMAKE_MINIMUM_REQUIRED(VERSION 3.7)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})
include(ExternalProject)

#set(CMAKE_CXX_STANDARD 14)
#set(CMAKE_CXX_STANDARD_REQUIRED ON)
#set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive")

set(LAUNCHER_INSTALL "${PROJECT_SOURCE_DIR}/output/${CMAKE_SYSTEM_NAME}/${CMAKE_BUILD_TYPE}" CACHE FILEPATH "Final Install Path") 
set(LAUNCHER_CMAKE_GLOBALS -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_EXE_LINKER_FLAGS=${CMAKE_EXE_LINKER_FLAGS} -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS} -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS} -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE} -DCMAKE_CXX_FLAGS_DEBUG=${CMAKE_CXX_FLAGS_DEBUG} -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE} -DCMAKE_C_FLAGS_DEBUG=${CMAKE_C_FLAGS_DEBUG} -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR> -DCMAKE_GENERATOR=${CMAKE_GENERATOR} -DCMAKE_GENERATOR_PLATFORM=${CMAKE_GENERATOR_PLATFORM} -DCROOT=${PROJECT_SOURCE_DIR} -DLAUNCHER_BUILDNUM=${LAUNCHER_BUILDNUM} -DLAUNCHER_API=${LAUNCHER_API} -DLAUNCHER_API_KEY=${LAUNCHER_API_KEY} -DCMAKE_MODULE_PATH=${CMAKE_MODULE_PATH})

file(MAKE_DIRECTORY "${LAUNCHER_INSTALL}")
file(MAKE_DIRECTORY "${LAUNCHER_INSTALL}/lib")
file(MAKE_DIRECTORY "${LAUNCHER_INSTALL}/include")
file(MAKE_DIRECTORY "${LAUNCHER_INSTALL}/bin")

if (COMMAND cmake_policy)
    # Libraries linked via full path no longer produce linker search paths
    cmake_policy (SET CMP0003 NEW)
    # INTERFACE_LINK_LIBRARIES defines the link interface
    cmake_policy (SET CMP0022 NEW)
    # Disallow use of the LOCATION target property - so we set to OLD as we still need it
    cmake_policy (SET CMP0026 OLD)
    # MACOSX_RPATH is enabled by default
    cmake_policy (SET CMP0042 NEW)
    # Honor the visibility properties for SHARED target types only
    cmake_policy (SET CMP0063 OLD)
endif ()

#######################################
# ZLIB BUILD                           #
#######################################

ExternalProject_Add (ZLIB
	GIT_REPOSITORY https://github.com/dthompso99/zlib.git
	UPDATE_DISCONNECTED 1
	PREFIX ${PROJECT_SOURCE_DIR}/git/${CMAKE_SYSTEM_NAME}/${CMAKE_BUILD_TYPE}/ZLIB
	CMAKE_ARGS ${LAUNCHER_CMAKE_GLOBALS} -DBUILD_SHARED_LIBS=OFF -DBUILD_EXAMPLES=OFF
	INSTALL_DIR ${LAUNCHER_INSTALL}
)

#######################################
# MBEDTLS BUILD                          #
#######################################

ExternalProject_Add (MBEDTLS
	GIT_REPOSITORY https://github.com/ARMmbed/mbedtls.git
	UPDATE_DISCONNECTED 1
	PREFIX ${PROJECT_SOURCE_DIR}/git/${CMAKE_SYSTEM_NAME}/${CMAKE_BUILD_TYPE}/MBEDTLS
	CMAKE_ARGS ${LAUNCHER_CMAKE_GLOBALS} -DBUILD_SHARED_LIBS=OFF -DENABLE_PROGRAMS=OFF -DENABLE_ZLIB_SUPPORT=ON -DZLIB_ROOT=${LAUNCHER_INSTALL}
	INSTALL_DIR ${LAUNCHER_INSTALL}
)

#######################################
# SSH2 BUILD                           #
#######################################

ExternalProject_Add (SSH2
	GIT_REPOSITORY https://github.com/libssh2/libssh2.git
	UPDATE_DISCONNECTED 1
	PREFIX ${PROJECT_SOURCE_DIR}/git/${CMAKE_SYSTEM_NAME}/${CMAKE_BUILD_TYPE}/SSH2
	CMAKE_ARGS ${LAUNCHER_CMAKE_GLOBALS} -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DLIBSSH2_API=ON -DBUILD_SHARED_LIBS=OFF
	INSTALL_DIR ${LAUNCHER_INSTALL}
)

#######################################
# FLTK BUILD                          #
#######################################

ExternalProject_Add (FLTK
	SVN_REPOSITORY http://seriss.com/public/fltk/fltk/branches/branch-1.4/
	SVN_USERNAME ""
	SVN_PASSWORD ""
	UPDATE_DISCONNECTED 1
	PREFIX ${PROJECT_SOURCE_DIR}/git/${CMAKE_SYSTEM_NAME}/${CMAKE_BUILD_TYPE}/FLTK
	CMAKE_ARGS ${LAUNCHER_CMAKE_GLOBALS} -DBUILD_SHARED_LIBS=OFF -DOPTION_BUILD_EXAMPLES=OFF -DOPTION_PRINT_SUPPORT=OFF -DOPTION_FILESYSTEM_SUPPORT=ON -DOPTION_USE_SYSTEM_ZLIB=ON
	INSTALL_DIR ${LAUNCHER_INSTALL}
)

#######################################
# CURL BUILD                           #
#######################################

ExternalProject_Add (CURL
	GIT_REPOSITORY https://github.com/dthompso99/curl.git	
	UPDATE_DISCONNECTED 1
	PREFIX ${PROJECT_SOURCE_DIR}/git/${CMAKE_SYSTEM_NAME}/${CMAKE_BUILD_TYPE}/CURL
	CMAKE_ARGS ${LAUNCHER_CMAKE_GLOBALS} -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCMAKE_USE_OPENSSL=OFF -DCMAKE_USE_MBEDTLS=ON -DCMAKE_USE_LIBSSH2=OFF -DCURL_STATICLIB=ON -DCURL_STATIC_CRT=ON -DCURL_DISABLE_LDAP=ON -DCURL_DISABLE_LDAPS=ON -DCURL_DISABLE_POP3=ON -DCURL_DISABLE_IMAP=ON -DCURL_DISABLE_SMTP=ON -DZLIB_ROOT=${LAUNCHER_INSTALL}
	INSTALL_DIR ${LAUNCHER_INSTALL}
)


#######################################
# LAUNCHER BUILD                          #
#######################################

ExternalProject_Add (LAUNCHER
	URL ${PROJECT_SOURCE_DIR}/app
	PREFIX ${CMAKE_CURRENT_BINARY_DIR}/LAUNCHER
	CMAKE_ARGS ${LAUNCHER_CMAKE_GLOBALS} -DURHO3D_HOME=${LAUNCHER_INSTALL} -DCINCLUDES=${LAUNCHER_INSTALL}/include -DCLIBS=${LAUNCHER_INSTALL}/lib -DEXENAME=${EXENAME} -DLAUNCHER_BUILDNUM=${LAUNCHER_BUILDNUM} -DMANIFEST_BASE=${MANIFEST_BASE} -DZLIB_ROOT=${LAUNCHER_INSTALL} -DEXECUTABLE=${EXECUTABLE} -DPATCHER_TITLE=${PATCHER_TITLE}
	INSTALL_DIR ${LAUNCHER_INSTALL}
	BUILD_ALWAYS 1
)

ExternalProject_Add_Step(LAUNCHER forceconfigure
	COMMAND ${CMAKE_COMMAND} -E echo "Force configure of LAUNCHER"
	DEPENDEES configure
	DEPENDERS build
	ALWAYS 1
)
add_dependencies(MBEDTLS ZLIB)
add_dependencies(CURL MBEDTLS)
add_dependencies(FLTK ZLIB)
add_dependencies(LAUNCHER FLTK CURL)
add_custom_target(custom-install DEPENDS LAUNCHER)
